@* ViewBag.ThisProject *@
@* ViewBag.CurrentUser *@

@{
    ViewData["Title"] = "@ViewBag.ThisProject.Title";
}

<div>
    <div class="d-flex justify-content-sm-between align-self-center">
        <div>
            <h1 class="text-primary">@ViewBag.ThisProject.Title</h1>
            <h3 class="text-dark">Description:</h3>
            <p>@ViewBag.ThisProject.ProjectDescription</p>
        </div>
        <div class="text-dark">
            <h4>Start Date: @ViewBag.ThisProject.ProjectStartDate.ToString("M/d/y")</h4>
            <h4 class="text-danger">Due Date: @ViewBag.ThisProject.ProjectDueDate.ToString("M/d/y")</h4>
        </div>
    </div>
    <div>
        <h3>Team:</h3>
        @foreach(Assignment a in @ViewBag.ThisProject.AssignedUsers)
        {
            <p>@a.UserForProject.FirstName</p>
        }
    </div>
    <div>
        <h3 class="text-dark">Tasks</h3>
        <div>
            <partial name="TaskerFormPartial" />
        </div>
        <div class="d-inline-flex col-12 rounded bg-white border-bottom border-right border-secondary mt-2 text-dark">
                <div class="col-9 border-right border-secondary">
                    <div class="d-flex justify-content-around mb-2">
                        <div id="Stage1" class="rounded col-2 m-1">
                            <h4 class="text-center border-bottom">To Do</h4>
                            <div ondrop="drop(event)" ondragover="allowDrop(event)">
                                @foreach (Tasker t in @ViewBag.ThisProject.ProjectTaskers)
                                {
                                    @if(t.TaskerPriority == "To Do"){
                                            <div id="@t.TaskerId" draggable="true" ondragstart="drag(event)" class="ToDo">@t.TaskerDescription</div>
                                        }
                                }
                            </div>
                        </div>
                        <div id="Stage2" class="rounded col-2 m-1">
                            <h4 class="text-center border-bottom">In-progress</h4>
                            <div ondrop="drop(event)" ondragover="allowDrop(event)">
                                @foreach (Tasker t in @ViewBag.ThisProject.ProjectTaskers)
                                {
                                    @if(t.TaskerPriority == "In-progress"){
                                            <div id="@t.TaskerId" draggable="true" ondragstart="drag(event)" class="InProgress">@t.TaskerDescription</div>
                                        }
                                }
                            </div>
                        </div>
                        <div id="Stage3" class="rounded col-2 m-1">
                            <h4 class="text-center border-bottom">Verify</h4>
                            <div ondrop="drop(event)" ondragover="allowDrop(event)">
                                @foreach (Tasker t in @ViewBag.ThisProject.ProjectTaskers)
                                {
                                    @if(t.TaskerPriority == "Verify"){
                                            <div id="@t.TaskerId" draggable="true" ondragstart="drag(event)" class="Verify">@t.TaskerDescription</div>
                                        }
                                }
                            </div>
                        </div>
                    </div>
                    <div id="Stage5" class="rounded col-8 m-1 pt-2">
                        <h4 class="text-center border-bottom">EXPEDITE</h4>
                        <div ondrop="drop(event)" ondragover="allowDrop(event)">
                            @foreach (Tasker t in @ViewBag.ThisProject.ProjectTaskers)
                            {
                                @if(t.TaskerPriority == "Expedite"){
                                        <div id="@t.TaskerId" draggable="true" ondragstart="drag(event)" class="Expedite">@t.TaskerDescription</div>
                                    }
                            }
                        </div>
                    </div>
                </div>
                <div id="Stage4" class="rounded col-2 m-1">
                    <h4 class="text-center border-bottom">Complete</h4>
                    <div ondrop="drop(event)" ondragover="allowDrop(event)">
                        @foreach (Tasker t in @ViewBag.ThisProject.ProjectTaskers)
                        {
                            @if(t.TaskerPriority == "Complete"){
                                    <div id="@t.TaskerId" draggable="true" ondragstart="drag(event)" class="Complete">@t.TaskerDescription</div>
                                }
                        }
                    </div>
                </div>

    </div>
<style>
    .ToDo {
  margin: 0.5%;
  border-bottom: 0.5px solid grey;
  background-color: plum;
  color: black;

}

.InProgress {
  margin: 0.5%;
  border-bottom: 0.5px solid grey;
  background-color: lightskyblue;
  color: black;

}

.Verify {
  margin: 0.5%;
  border-bottom: 0.5px solid grey;
  background-color: lightgoldenrodyellow;
  color: black;
}

.Complete {
  margin: 0.5%;
  border-bottom: 0.5px solid grey;
  background-color: lightgreen;
  color: black;
}

.Expedite {
  margin: 0.5%;
  border-bottom: 0.5px solid grey;
  background-color: palevioletred;
  color: black;
  width: 20%;
}
</style>
<script>
    $(".selector").draggable({
        drag: function(event, ui){
            ui.position.left = Math.min( 100, ui.position.left );
        }
    });

    $( ".selector" ).on( "dragstart", function( event, ui ) {} );
    $( ".selector" ).on( "dragstop", function( event, ui ) {} );

    @* function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(ev) {
        ev.dataTransfer.setData("text", ev.target.id);
    }

    function drop(ev) {
        ev.preventDefault();
        console.log(ev);
        var data = ev.dataTransfer.getData("text");
        var task = document.getElementById(data);
        ev.target.appendChild(task);
        let $this = $(this);
        if($this.hasClass('ToDo')){
            task.removeClass('InProgress', 'Verify', 'Complete', 'Expedite');
            task.addClass('ToDo');
        } else if($this.hasClass("InProgress")){
            task.removeClass('ToDo', 'Verify', 'Complete', 'Expedite');
            task.addClass('InProgress');
        } else if($this.hasClass("Verify")){
            task.removeClass('ToDo', 'InProgress', 'Complete', 'Expedite');
            task.addClass('Verify');
        } else if($this.hasClass("Complete")){
            task.removeClass('ToDo', 'InProgress','Verify', 'Expedite');
            task.addClass('Complete');
        } else {
            task.removeClass('ToDo', 'InProgress', 'Verify', 'Complete');
            task.addClass('Expedite');
        };
    } *@
</script>
</div>