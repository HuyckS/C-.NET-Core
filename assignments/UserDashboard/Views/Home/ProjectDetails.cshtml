@* ViewBag.ThisProject *@
@* ViewBag.CurrentUser *@

@{
    ViewData["Title"] = "@ViewBag.ThisProject.Title";
}

<div>
    <div class="d-flex justify-content-sm-between align-self-center">
        <div>
            <h1 class="text-primary">@ViewBag.ThisProject.Title</h1>
            <h3 class="text-dark">Description:</h3>
            <p>@ViewBag.ThisProject.ProjectDescription</p>
        </div>
        <div class="text-dark">
            <h4>Start Date: @ViewBag.ThisProject.ProjectStartDate.ToString("M/d/y")</h4>
            <h4 class="text-danger">Due Date: @ViewBag.ThisProject.ProjectDueDate.ToString("M/d/y")</h4>
        </div>
    </div>
    <div>
        <h2 class="text-dark">Tasks</h2>
        <div>
            <partial name="TaskerFormPartial" />
        </div>
        <div class="d-flex justify-content-between rounded bg-white border-bottom border-right border-secondary  m-2 text-dark">
                    @* <div class=" rounded m-3" ondrop="drop(event)" ondragover="allowDrop(event)">
                        <h4 class="border-bottom">Backlog</h4>
                        @foreach (Tasker t in @ViewBag.ThisProject.ProjectTaskers)
                        {
                            @if(t.TaskerPriority == "Backlog" || t.TaskerPriority == null){
                                <div id="@t.TaskerId" draggable="true" ondragstart="drag(event)" class="">@t.TaskerDescription</div>
                            }
                        }
                    </div> *@
                    <div id="Stage1" class="rounded m-3" ondrop="drop(event)" ondragover="allowDrop(event)">
                        <h4 class="border-bottom">To Do</h4>
                        @foreach (Tasker t in @ViewBag.ThisProject.ProjectTaskers)
                        {
                            @if(t.TaskerPriority == "To Do"){
                                    <div id="@t.TaskerId" draggable="true" ondragstart="drag(event)" class="ToDo">@t.TaskerDescription</div>
                                }
                        }
                    </div>
                    <div id="Stage2" class="rounded  m-3" ondrop="drop(event)" ondragover="allowDrop(event)">
                        <h4 class="border-bottom">In-progress</h4>
                        @foreach (Tasker t in @ViewBag.ThisProject.ProjectTaskers)
                        {
                            @if(t.TaskerPriority == "In-progress"){
                                    <div id="@t.TaskerId" draggable="true" ondragstart="drag(event)" class="InProgress">@t.TaskerDescription</div>
                                }
                        }
                    </div>
                    <div id="Stage3" class="rounded m-3" ondrop="drop(event)" ondragover="allowDrop(event)">
                        <h4 class="border-bottom">Verify</h4>
                        @foreach (Tasker t in @ViewBag.ThisProject.ProjectTaskers)
                        {
                            @if(t.TaskerPriority == "Verify"){
                                    <div id="@t.TaskerId" draggable="true" ondragstart="drag(event)" class="Verify">@t.TaskerDescription</div>
                                }
                        }
                    </div>
                    <div id="Stage4" class="rounded  m-3" ondrop="drop(event)" ondragover="allowDrop(event)">
                        <h4 class="border-bottom">Complete</h4>
                        @foreach (Tasker t in @ViewBag.ThisProject.ProjectTaskers)
                        {
                            @if(t.TaskerPriority == "Complete"){
                                    <div id="@t.TaskerId" draggable="true" ondragstart="drag(event)" class="Complete">@t.TaskerDescription</div>
                                }
                        }
                    </div>
        </div>
<style>
    .ToDo {
  margin: 0.5%;
  border-bottom: 0.5px solid grey;
  background-color: plum;
  color: black;
}

.InProgress {
  margin: 0.5%;
  border-bottom: 0.5px solid grey;
  background-color: lightskyblue;
  color: black;
}

.Verify {
  margin: 0.5%;
  border-bottom: 0.5px solid grey;
  background-color: lightgoldenrodyellow;
  color: black;
}

.Complete {
  margin: 0.5%;
  border-bottom: 0.5px solid grey;
  background-color: lightgreen;
  color: black;
}

.Expedite {
  margin: 0.5%;
  border-bottom: 0.5px solid grey;
  background-color: palevioletred;
  color: black;
}
</style>
<script>
    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(ev) {
        ev.dataTransfer.setData("text", ev.target.id);
    }

    function drop(ev) {
        ev.preventDefault();
        console.log(ev);
        var data = ev.dataTransfer.getData("text");
        var task = document.getElementById(data);
        if(document.getElementById("Stage1").has(task)){
            task.removeClass('InProgress', 'Verify', 'Complete', 'Expedite');
            task.addClass('ToDo');
        };
        if(document.getElementById("Stage2").has(task)){
            task.removeClass('ToDo', 'Verify', 'Complete', 'Expedite');
            task.addClass('InProgress');
        } 
        if(document.getElementById("Stage3").has(task)){
            task.removeClass('ToDo', 'InProgress', 'Complete', 'Expedite');
            task.addClass('Verify');
        }
        if(document.getElementById("Stage4").has(task)){
            task.removeClass('ToDo', 'InProgress','Verify', 'Expedite');
            task.addClass('Complete');
        }
        if(document.getElementById("Stage5").has(task)){
            task.removeClass('ToDo', 'InProgress', 'Verify', 'Complete');
            task.addClass('Expedite');
        };
        ev.target.appendChild(task);
    }
</script>
</div>